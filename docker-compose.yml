services:
  redis:
    image: redis:7-alpine
    container_name: tictactoe-redis
    ports:
      - "6379:6379"
    command: redis-server --save 60 1 --loglevel warning
    volumes:
      - redis-data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 3
    restart: unless-stopped
    networks:
      - tictactoe-network

  backend:
    build: ./backend
    container_name: tictactoe-backend
    ports:
      - "8080:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=prod
      - SERVER_PORT=8080
      - CORS_ALLOWED_ORIGINS=http://localhost:3000,http://localhost
      - WEBSOCKET_ALLOWED_ORIGINS=http://localhost:3000,http://localhost
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    depends_on:
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/api/health"]
      interval: 30s
      timeout: 3s
      retries: 3
      start_period: 40s
    restart: unless-stopped
    networks:
      - tictactoe-network

  frontend:
    build:
      context: ./frontend
      args:
        - REACT_APP_API_URL=http://localhost:8080
        - REACT_APP_WS_URL=http://localhost:8080/ws
        - REACT_APP_ENV=production
    container_name: tictactoe-frontend
    ports:
      - "80:80"
    depends_on:
      backend:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/"]
      interval: 30s
      timeout: 3s
      retries: 3
      start_period: 10s
    restart: unless-stopped
    networks:
      - tictactoe-network

networks:
  tictactoe-network:
    driver: bridge

volumes:
  redis-data:

