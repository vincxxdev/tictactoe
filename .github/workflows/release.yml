name: Release Management

on:
  push:
    tags:
      - 'v*.*.*'

permissions:
  contents: write
  packages: write

jobs:
  create-release:
    name: Create GitHub Release
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
    
    - name: Generate changelog
      id: changelog
      run: |
        # Get previous tag
        PREVIOUS_TAG=$(git describe --abbrev=0 --tags $(git rev-list --tags --skip=1 --max-count=1) 2>/dev/null || echo "")
        
        # Generate changelog
        if [ -z "$PREVIOUS_TAG" ]; then
          CHANGELOG="Initial release"
        else
          CHANGELOG=$(git log ${PREVIOUS_TAG}..HEAD --pretty=format:"- %s (%h)" --no-merges)
        fi
        
        # Save to output
        echo "changelog<<EOF" >> $GITHUB_OUTPUT
        echo "$CHANGELOG" >> $GITHUB_OUTPUT
        echo "EOF" >> $GITHUB_OUTPUT
    
    - name: Create Release
      uses: softprops/action-gh-release@v2
      with:
        name: Release ${{ github.ref_name }}
        body: |
          ## Changes in this Release
          
          ${{ steps.changelog.outputs.changelog }}
          
          ## Docker Images
          
          Frontend: `ghcr.io/${{ github.repository }}/frontend:${{ github.ref_name }}`
          Backend: `ghcr.io/${{ github.repository }}/backend:${{ github.ref_name }}`
          
          ## Installation
          
          Pull the latest images:
          ```bash
          docker pull ghcr.io/${{ github.repository }}/frontend:${{ github.ref_name }}
          docker pull ghcr.io/${{ github.repository }}/backend:${{ github.ref_name }}
          ```
        draft: false
        prerelease: false
        generate_release_notes: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build-release-artifacts:
    name: Build Release Artifacts
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: 'maven'
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json
    
    - name: Build backend
      working-directory: backend
      run: ./mvnw clean package -DskipTests
    
    - name: Build frontend
      working-directory: frontend
      run: |
        npm ci
        npm run build
    
    - name: Create release archive
      run: |
        mkdir -p release
        cp backend/target/*.jar release/tictactoe-backend-${{ github.ref_name }}.jar
        tar -czf release/tictactoe-frontend-${{ github.ref_name }}.tar.gz -C frontend/build .
    
    - name: Upload release assets
      uses: softprops/action-gh-release@v1
      with:
        files: |
          release/*.jar
          release/*.tar.gz
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
